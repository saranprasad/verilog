`timescale 1ns / 1ps

module SISO_tb;

	// Inputs
	reg clk;
	reg rst;
	reg data_in;

	// Outputs
	wire data_out;

	// Instantiate the Unit Under Test (UUT)
	SISO uut (
		.clk(clk), 
		.rst(rst), 
		.data_in(data_in), 
		.data_out(data_out)
	);

	always #20 clk = ~clk;
	
	initial begin
		// Initialize Inputs
		clk = 0;
		rst = 0;
		data_in = 0;
		@(posedge clk);
		rst = 1'b1;
		repeat(2) @(posedge clk);
		rst = 1'b0;
		data_in = 1'b1;
		@(posedge clk);
		data_in = 1'b0;
		@(posedge clk);
		data_in = 1'b1;
		@(posedge clk);
		data_in = 1'b0;
		
		// Wait 100 ns for global reset to finish
		#100;
        
		// Add stimulus here

	end
      
endmodule

